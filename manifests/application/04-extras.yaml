# PodDisruptionBudget para disponibilidade
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: fiap-soat-app-pdb
  namespace: fiap-soat
  labels:
    app: fiap-soat-app
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: fiap-soat-app
---
# NetworkPolicy para segurança (Opcional - comentado para simplicidade)
# Descomente se precisar de isolamento de rede
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: fiap-soat-app-netpol
#   namespace: fiap-soat
# spec:
#   podSelector:
#     matchLabels:
#       app: fiap-soat-app
#   policyTypes:
#   - Ingress
#   - Egress
#   ingress:
#   - from:
#     - namespaceSelector:
#         matchLabels:
#           name: fiap-soat
#     - namespaceSelector:
#         matchLabels:
#           name: kube-system
#     ports:
#     - protocol: TCP
#       port: 3000
#   egress:
#   - {} # Permite todo tráfego de saída
---
# ServiceMonitor para Prometheus (se usar monitoring)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: fiap-soat-app
  namespace: fiap-soat
  labels:
    app: fiap-soat-app
    project: fiap-soat-fase3
spec:
  selector:
    matchLabels:
      app: fiap-soat-app
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
---
# PodMonitor alternativo (se não usar ServiceMonitor)
# apiVersion: monitoring.coreos.com/v1
# kind: PodMonitor
# metadata:
#   name: fiap-soat-app-pods
#   namespace: fiap-soat
# spec:
#   selector:
#     matchLabels:
#       app: fiap-soat-app
#   podMetricsEndpoints:
#   - port: http
#     path: /metrics
