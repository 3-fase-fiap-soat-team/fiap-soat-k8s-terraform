# FIAP SOAT - Enhanced NestJS Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fiap-soat-nestjs-enhanced
  namespace: fiap-soat-app
  labels:
    app: fiap-soat-nestjs-enhanced
    version: v1
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fiap-soat-nestjs-enhanced
  template:
    metadata:
      labels:
        app: fiap-soat-nestjs-enhanced
        version: v1
        component: backend
    spec:
      containers:
      - name: fiap-soat-nestjs
        image: node:20-alpine
        imagePullPolicy: IfNotPresent
        workingDir: /app
        command: ["/bin/sh"]
        args: 
        - -c
        - |
          npm init -y
          npm install express cors
          cat > server.js << 'EOF'
          const express = require('express');
          const app = express();
          
          app.use(express.json());
          
          app.get('/', (req, res) => {
            res.json({
              status: "üöÄ FIAP SOAT NestJS API - ENHANCED VERSION",
              message: "‚úÖ Build Docker realizado com sucesso! Aplica√ß√£o rodando no EKS",
              version: "2.0.0",
              timestamp: new Date().toISOString(),
              environment: "AWS EKS Production",
              pods: 2,
              endpoints: ["/health", "/categories", "/products", "/customers", "/orders"]
            });
          });
          
          app.get('/health', (req, res) => {
            res.json({
              status: "‚úÖ HEALTHY",
              timestamp: new Date().toISOString(),
              uptime: Math.floor(process.uptime()),
              memory: process.memoryUsage(),
              environment: "EKS",
              node: process.env.HOSTNAME
            });
          });
          
          app.get('/categories', (req, res) => {
            res.json([
              { id: "b477f4bc-373a-4e8a-ac71-11523b821a0e", name: "üçî Lanche" },
              { id: "0a648c21-f468-47e1-98b4-10ce0d34da52", name: "üçü Acompanhamento" },
              { id: "dd971d31-e2c9-438e-8882-8e7b793be7d1", name: "ü•§ Bebida" },
              { id: "1bb9953d-1f80-4888-b402-df7dde0c2581", name: "üç∞ Sobremesa" }
            ]);
          });
          
          const port = 3000;
          app.listen(port, '0.0.0.0', () => {
            console.log(`üöÄ FIAP SOAT Enhanced API listening on port ${port}`);
            console.log(`üìã Environment: EKS Production`);
            console.log(`üè• Health Check: http://localhost:${port}/health`);
          });
          EOF
          node server.js
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
