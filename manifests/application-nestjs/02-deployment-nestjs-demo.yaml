# FIAP SOAT - NestJS Application Deployment (DEMO WITH PUBLIC IMAGE)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fiap-soat-nestjs
  namespace: fiap-soat-app
  labels:
    app: fiap-soat-nestjs
    version: v1
    component: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fiap-soat-nestjs
  template:
    metadata:
      labels:
        app: fiap-soat-nestjs
        version: v1
        component: backend
    spec:
      containers:
      - name: fiap-soat-nestjs
        # Usando uma imagem p√∫blica Node.js para demonstra√ß√£o
        image: node:20-alpine
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: ["-c", "mkdir -p /app && cd /app && npm init -y && npm install express && echo 'const express = require(\"express\"); const app = express(); app.get(\"/\", (req, res) => res.json({status: \"FIAP SOAT NestJS API Demo\", message: \"Build Docker realizado com sucesso!\", version: \"1.0.0\", endpoints: [\"/categories\", \"/products\", \"/customers\", \"/orders\"]})); app.get(\"/health\", (req, res) => res.json({status: \"OK\", timestamp: new Date().toISOString()})); app.get(\"/categories\", (req, res) => res.json([{id: \"b477f4bc-373a-4e8a-ac71-11523b821a0e\", name: \"Lanche\"}, {id: \"dd971d31-e2c9-438e-8882-8e7b793be7d1\", name: \"Bebida\"}])); app.listen(3000, \"0.0.0.0\", () => console.log(\"üöÄ FIAP SOAT API Demo running on port 3000\"));' > app.js && node app.js"]
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        # Health check
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
        # Resources b√°sicos
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
