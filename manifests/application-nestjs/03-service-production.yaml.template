# FIAP SOAT - NestJS Application Services (PRODUCTION VERSION)
# Template para quando a aplicação NestJS real estiver funcionando
apiVersion: v1
kind: Service
metadata:
  name: fiap-soat-nestjs
  namespace: fiap-soat-app
  labels:
    app: fiap-soat-nestjs
    component: backend
  annotations:
    # AWS Load Balancer configuration
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    # Health check configuration
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "3"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000  # PRODUCTION: NestJS roda na porta 3000
    protocol: TCP
    name: http
  - port: 443
    targetPort: 3000  # Para HTTPS futuro
    protocol: TCP
    name: https
  selector:
    app: fiap-soat-nestjs

---
# Service interno para comunicação entre pods e métricas
apiVersion: v1
kind: Service
metadata:
  name: fiap-soat-nestjs-internal
  namespace: fiap-soat-app
  labels:
    app: fiap-soat-nestjs
    component: backend
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  - name: metrics
    port: 9090
    targetPort: 3000
    protocol: TCP
  selector:
    app: fiap-soat-nestjs

---
# Headless service para service discovery
apiVersion: v1
kind: Service
metadata:
  name: fiap-soat-nestjs-headless
  namespace: fiap-soat-app
  labels:
    app: fiap-soat-nestjs
    component: backend
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: fiap-soat-nestjs
