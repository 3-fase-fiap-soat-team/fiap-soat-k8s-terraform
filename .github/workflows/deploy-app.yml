name: Deploy Application to EKS

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'manifests/**'
      - '.github/workflows/deploy-app.yml'

jobs:
  deploy:
    name: Deploy NestJS App
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    env:
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      EKS_CLUSTER_NAME: fiap-soat-eks-dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
          kubectl version --client
          kubectl cluster-info

      - name: Deploy Kubernetes Manifests
        run: |
          echo "üì¶ Aplicando manifests..."
          cd manifests
          kubectl apply -f namespace.yaml
          kubectl apply -f configmap.yaml
          kubectl apply -f secret.yaml
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Wait for Deployment Rollout
        run: |
          echo "‚è≥ Aguardando rollout do deployment..."
          kubectl rollout status deployment/fiap-soat-nestjs -n fiap-soat-app --timeout=5m

      - name: Verify Deployment
        run: |
          echo ""
          echo "=== üìä Status dos Pods ==="
          kubectl get pods -n fiap-soat-app -o wide
          echo ""
          echo "=== üîß Status do Service ==="
          kubectl get svc -n fiap-soat-app
          echo ""
          echo "=== üìù Logs da Aplica√ß√£o (√∫ltimas 50 linhas) ==="
          kubectl logs -n fiap-soat-app deployment/fiap-soat-nestjs --tail=50 || true
          echo ""
          echo "=== ‚úÖ Eventos do Namespace ==="
          kubectl get events -n fiap-soat-app --sort-by='.lastTimestamp' | tail -20

      - name: Application Health Check
        run: |
          echo "üè• Verificando health da aplica√ß√£o..."
          # Pegar IP de um dos pods
          POD_NAME=$(kubectl get pods -n fiap-soat-app -l app=fiap-soat-nestjs -o jsonpath='{.items[0].metadata.name}')
          echo "Pod selecionado: $POD_NAME"
          
          # Fazer port-forward tempor√°rio e testar
          kubectl port-forward -n fiap-soat-app pod/$POD_NAME 8080:3000 &
          PF_PID=$!
          sleep 5
          
          curl -f http://localhost:8080/health || echo "‚ö†Ô∏è  Health check falhou (pode ser normal se o banco n√£o conectou ainda)"
          
          kill $PF_PID || true
